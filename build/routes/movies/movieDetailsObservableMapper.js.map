{"version":3,"sources":["../../../src/server/routes/movies/movieDetailsObservableMapper.js"],"names":["successRetrieveMoviesCallback","allData","movies","reduce","accum","curr","index","Movies","mappedMovies","map","movie","cinema","reqs","ID","options","uri","name","headers","json","cachedMovieDetails","get","console","log","push","Observable","of","defer","then","res","movieDetails","put","timeout","retryWhen","errors","delay","forkJoin"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAWA,IAAMA,gCAAgC,SAAhCA,6BAAgC,CAACC,OAAD,EAAa;AACjD,MAAMC,SAASD,QAAQE,MAAR,CAAe,UAACC,KAAD,EAAQC,IAAR,EAAcC,KAAd,EAAwB;AAAA,QAC5CC,MAD4C,GACjCF,IADiC,CAC5CE,MAD4C;;AAEpD,QAAMC,eAAeD,OAAOE,GAAP,CAAW,UAACC,KAAD,EAAW;AACzC,0BAAYA,KAAZ,IAAmBC,QAAQ,gBAAQL,KAAR,CAA3B;AACD,KAFoB,CAArB;AAGA,wCAAWF,KAAX,sBAAqBI,YAArB;AACD,GANc,EAMZ,EANY,CAAf;AAOA,MAAMI,OAAO,EAAb;AARiD;AAAA;AAAA;;AAAA;AAAA;AAAA,UAStCF,KATsC;AAAA,UAUvCG,EAVuC,GAUxBH,KAVwB,CAUvCG,EAVuC;AAAA,UAUnCF,MAVmC,GAUxBD,KAVwB,CAUnCC,MAVmC;;AAW/C,UAAMG,UAAU;AACdC,mCAAiBJ,OAAOK,IAAxB,iCAAqDH,EADvC;AAEdI,iBAAS;AACP;AADO,SAFK;AAKdC,cAAM;AALQ,OAAhB;AAOA,UAAMC,qBAAqB,sBAAMC,GAAN,CAAUN,QAAQC,GAAlB,CAA3B;AACA,UAAI,mCAA2BI,kBAA/B,EAAmD;AACjDE,gBAAQC,GAAR,4BAAqCH,mBAAmBN,EAAxD,EADiD,CACa;AAC9DD,aAAKW,IAAL,CAAU,eAAGC,UAAH,CAAcC,EAAd,CAAiBN,kBAAjB,CAAV;AACD,OAHD,MAGO;AACLP,aAAKW,IAAL,CAAU,eAAGC,UAAH,CAAcE,KAAd,CACR,YAAM;AACJ,iBAAO,oCAAGZ,OAAH,EACJa,IADI,CACC,UAACC,GAAD,EAAS;AACb,gBAAMC,4BAAoBD,GAApB,IAAyBjB,cAAzB,GAAN;AACA,kCAAMmB,GAAN,CAAUhB,QAAQC,GAAlB,EAAuBc,YAAvB;AACA,mBAAOA,YAAP;AACD,WALI,CAAP;AAMD,SARO,EASPE,OATO,yBAUPC,SAVO,CAUG,UAACC,MAAD,EAAY;AACrBZ,kBAAQC,GAAR,0BAAmCR,QAAQC,GAA3C,aADqB,CACmC;AACxD,iBAAOkB,OAAOC,KAAP,sBAAP;AACD,SAbO,CAAV;AAeD;AAtC8C;;AASjD,yBAAoBhC,MAApB,8HAA4B;AAAA;AA8B3B;AAvCgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAwCjD,SAAO,eAAGsB,UAAH,CAAcW,QAAd,CAAuBvB,IAAvB,CAAP;AACD,CAzCD;;kBA2CeZ,6B","file":"movieDetailsObservableMapper.js","sourcesContent":["import rp from 'request-promise-native';\nimport Rx from 'rxjs';\nimport cache from 'memory-cache';\nimport {\n  apiUrl,\n  cinemas,\n  movieDetailEndpoint,\n  accessToken,\n  requestDelay,\n  requestTimeOut,\n  enableMovieDetailsCache,\n  movieDetailsCacheTimeout,\n} from '../../config';\n\nconst successRetrieveMoviesCallback = (allData) => {\n  const movies = allData.reduce((accum, curr, index) => {\n    const { Movies } = curr;\n    const mappedMovies = Movies.map((movie) => {\n      return { ...movie, cinema: cinemas[index] };\n    });\n    return [...accum, ...mappedMovies];\n  }, []);\n  const reqs = [];\n  for (const movie of movies) {\n    const { ID, cinema } = movie;\n    const options = {\n      uri: `${apiUrl}${cinema.name}${movieDetailEndpoint}${ID}`,\n      headers: {\n        'x-access-token': accessToken,\n      },\n      json: true,\n    };\n    const cachedMovieDetails = cache.get(options.uri);\n    if (enableMovieDetailsCache && cachedMovieDetails) {\n      console.log(`return cached movie : ${cachedMovieDetails.ID}`);// eslint-disable-line no-console\n      reqs.push(Rx.Observable.of(cachedMovieDetails));\n    } else {\n      reqs.push(Rx.Observable.defer(\n        () => {\n          return rp(options)\n            .then((res) => {\n              const movieDetails = { ...res, cinema };\n              cache.put(options.uri, movieDetails, movieDetailsCacheTimeout);\n              return movieDetails;\n            });\n        })\n        .timeout(requestTimeOut)\n        .retryWhen((errors) => {\n          console.log(`fetch movie details-${options.uri} fails`);// eslint-disable-line no-console\n          return errors.delay(requestDelay);\n        })\n      );\n    }\n  }\n  return Rx.Observable.forkJoin(reqs);\n};\n\nexport default successRetrieveMoviesCallback;\n\n"]}